def recur(idx):
    n = len(idx)
    if len(idx) < 4:
        print 'if u' + str(n) + ' >= 0. {'
        if len(idx) < 3:
            print '    let u' + str(n) + ' = u' + str(n) + ' + tiny;'
        idx.append(0)
        recur(idx)
        idx.pop()
        print('} else {')
        idx.append(1)
        recur(idx)
        idx.pop()
        print('}')
        return

    n = sum(idx)

    if n == 0 or n == 4:
        return

    zero = []
    one = []
    for i in range(0, 4):
        if idx[i]:
            one.append(i)
        else:
            zero.append(i)

    print('let i = verts.len() as u32;')
    for i in one:
        for j in zero:
            print('verts.push(interpolate(u' + str(i) + ', u' + str(j) + ', v' + str(i) + ', v' + str(j) + '));')

    if n == 2:
        print('faces.push([i, i + 1, i + 2]);')
        print('faces.push([i + 2, i + 3, i]);')
    elif n == 1 or n == 3:
        print('faces.push([i, i + 1, i + 2]);')

print('// START GENERATED: generated by `scripts/tetrahedron_cuts.py`')
recur([])
print('// END GENERATED')

# # produce tetrahedron triangle code
# for i0 in range(0, 2):
#     for i1 in range(0, 2):
#         for i2 in range(0, 2):
#             for i3 in range(0, 2):
#                 idx = [i0, i1, i2, i3]
#                 n = sum(idx)
#
#                 zero = []
#                 one = []
#                 for i in range(0, 4):
#                     if idx[i]:
#                         one.append(i)
#                     else:
#                         zero.append(i)
#
#                 for i in one:
#                     for j in zero:
#                         print(i,j)
#
#                 if n == 2:
#                     print('Triangle',2)
#                 elif n == 1 or n == 3:
#                     print('Triangle',1)
#
#
